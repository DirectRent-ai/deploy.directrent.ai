{"version":3,"sources":["Pages/User/ChangePassword/Components/InitialValues.json.js","Pages/User/ChangePassword/Components/validationSchema.js","Pages/User/ChangePassword/Components/FormWrapper.js","Pages/User/ChangePassword/index.js","components/section-components/UserHeader.js"],"names":["initialValues","password","confirm_password","ValidationSchema","Yup","shape","required","matches","when","is","val","length","then","oneOf","connect","state","props","validationSchema","submitButtonLabel","BtnClasses","dispatch","FormikHOC","_ref","handleSubmit","handleKeypress","values","_objectWithoutProperties","_excluded","e","charCode","React","createElement","Form","Field","label","type","name","bsSize","onKeyPress","component","ReactStrapFormGroupInput","noBanner","isHideFooter","noHeader","isHideNavigation","BaseIndexPage","withRouter","turnOffSubmitting","turnOnSubmitting","match","_useContext","useContext","AuthContext","changePass","isLoggedIn","_useState","useState","loading","_slicedToArray","_useState3","_useState4","token","setToken","tokenId","useParams","useEffect","Route","Redirect","to","concat","PROPERTY","undefined","className","Container","UserHeader","Row","Col","md","Card","CardBody","CardTitle","Link","FormWrapper","Object","assign","onSubmit","_objectSpread","src","alt","id"],"mappings":"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","file":"static/js/30.1ec268d4.chunk.js","sourcesContent":["export const initialValues = {\n  password: \"\",\n  confirm_password: \"\"\n};\n","import * as Yup from \"yup\";\nexport const ValidationSchema = () => {\n  return Yup.object().shape({\n    password: Yup.string()\n      .required(\"Required\")\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Password must contain at-least 8 characters, one number and a special character (!@#$%)\"\n      ),\n    confirm_password: Yup.string()\n      .required(\"Required\")\n      .when(\"password\", {\n        is: (val) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Both password need to be the same\"\n        ),\n      }),\n  });\n};\n","import { ReactStrapFormGroupInput } from \"components/global-components/Components/Form\";\nimport { FormikHOC } from \"components/global-components/Components/ReactStrapFormik\";\nimport { Field } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"reactstrap\";\nimport { initialValues } from \"./InitialValues.json\";\nimport { ValidationSchema } from \"./validationSchema\";\n\nconst FormWrapper = ({ handleSubmit, values, ...rest }) => {\n  const handleKeypress = (e) => {\n    if (e.charCode === 13) {\n      handleSubmit();\n    }\n  };\n  return (\n    <Form>\n      <Field\n        label={<b>Password</b>}\n        type=\"password\"\n        name=\"password\"\n        bsSize=\"sm\"\n        onKeyPress={handleKeypress}\n        component={ReactStrapFormGroupInput}\n      />\n      <Field\n        label={<b>Confirm password</b>}\n        type=\"password\"\n        name=\"confirm_password\"\n        bsSize=\"sm\"\n        onKeyPress={handleKeypress}\n        component={ReactStrapFormGroupInput}\n      />\n    </Form>\n  );\n};\nconst mapStateToProps = (state, props) => ({\n  initialValues: initialValues,\n  validationSchema: ValidationSchema,\n  submitButtonLabel: \"submit \",\n  BtnClasses: \"float-right\"\n\n});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikHOC(FormWrapper));\n","import React from 'react';\nimport { AuthContext } from \"Boot/auth/AuthProvider\";\nimport BaseIndexPage from \"components/HOC/BaseIndexPage\";\nimport UserHeader from \"components/section-components/UserHeader\";\nimport { useContext, useEffect, useState } from \"react\";\n\nimport { PROPERTY } from \"components/Routes/Constants\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, Route, useParams, withRouter } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, Col, Container, Row } from \"reactstrap\";\nimport FormWrapper from \"./Components/FormWrapper\";\n\nconst Index = ({ turnOffSubmitting, turnOnSubmitting, match, ...props }) => {\n  const { changePass, isLoggedIn } = useContext(AuthContext);\n\n  const [loading] = useState(true);\n  const [token, setToken] = useState(\"\");\n  const { tokenId } = useParams();\n\n  useEffect(() => {\n    setToken(tokenId);\n  }, [tokenId]);\n\n  if (isLoggedIn)\n    return (\n      <Route>\n        <Redirect to={`${PROPERTY}/create#step1`} />\n      </Route>\n    );\n\n  if (loading === undefined)\n    return (\n      <div className=\"signin\">\n        <Container>\n          <UserHeader className=\"py-4\" />\n          <Row className=\"d-flex justify-content-center my-4\">\n            <Col md=\"5\">\n              <Card className=\"border-0 card-shadow-info\">\n                <CardBody>\n                  <div className=\"fa-3x text-center py-5\">\n                    <i className=\"fas fa-spinner fa-spin \"></i>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  else if (loading === false)\n    return (\n      <div className=\"signin\">\n        <Container>\n          <UserHeader className=\"py-4\" />\n          <Row className=\"d-flex justify-content-center my-4\">\n            <Col md=\"5\">\n              <Card className=\"border-0 card-shadow-info\">\n                <CardTitle></CardTitle>\n                <CardBody>\n                  <p className=\"mb-5\">\n                    Your Request has been expired please go back to your login\n                    page.\n                  </p>\n                  <p className=\"text-right\">\n                    <Link to=\"/login\" className=\"btn  btn-blue\">\n                      go back\n                    </Link>\n                  </p>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  return (\n    <div className=\"signin\">\n      <Container>\n        <UserHeader className=\"py-4\" />\n        <Row className=\"d-flex justify-content-center my-4\">\n          <Col md=\"5\">\n            <Card className=\"border-0 card-shadow-info\">\n              <CardTitle className=\"text-center\">\n                <h2 className=\"sub-title mt-3 pl-4 mb-0\"> Change Password</h2>\n                <p className=\"pl-4 small text-muted\">Enter email to recieve link</p>\n              </CardTitle>\n              <CardBody>\n                <FormWrapper\n                  {...props}\n                  onSubmit={(values) =>\n                    changePass(\n                      { token, ...values },\n                      turnOffSubmitting,\n                      turnOnSubmitting\n                    )\n                  }\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nconst mapStateToProps = (state, props) => ({\n  noBanner: true,\n  isHideFooter: true,\n  noHeader: true,\n  isHideNavigation: true,\n});\n\nexport default connect(mapStateToProps, null)(BaseIndexPage(withRouter(Index)));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserHeader = ({ className }) => (\n  <div className={`d-flex justify-content-center  ${className}`}>\n    <Link to=\"/\">\n      <img\n        className=\"frontlogo\"\n        src=\"assets/img/footer-logo.png\"\n        alt=\"logo\"\n        id=\"logo\"\n      />\n    </Link>\n  </div>\n);\n\nexport default UserHeader;\n"],"sourceRoot":""}