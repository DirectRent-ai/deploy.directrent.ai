{"version":3,"sources":["Pages/UserDetails/Components/EditProfilePhoto/Components/InitialValues.json.js","Pages/UserDetails/Components/EditProfilePhoto/Components/ValidationSchema.js","Pages/UserDetails/Components/EditProfilePhoto/Components/ProfilePhoto.js","Pages/UserDetails/Components/EditProfilePhoto/index.js","Pages/UserDetails/Components/VerifyDetails.js","Pages/UserDetails/Components/VerticalMenu.js","Pages/UserDetails/Components/Constants.js","Pages/UserDetails/Components/EditDetails/Components/ValidationSchema.js","Pages/UserDetails/Components/EditDetails/Components/Edit.js","Pages/UserDetails/Components/EditDetails/Components/InitialValues.json.js","Pages/UserDetails/Components/EditDetails/index.js","Pages/UserDetails/Components/BankAccount/Components/InitialValues.json.js","Pages/UserDetails/Components/BankAccount/Components/ValidationSchema.js","Pages/UserDetails/Components/BankAccount/Components/BankAccount.js","Pages/UserDetails/Components/BankAccount/index.js","components/global-components/Components/Images/ImageCompression.js","Pages/UserDetails/index.js","components/DashboardMainMenu.js","components/section-components/UserCard/UserCard.js","../node_modules/.pnpm/reactstrap@8.10.1_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/reactstrap/es/Alert.js"],"names":["initialValues","avatar","validationSchema","Yup","shape","connect","state","props","ValidationSchema","isFormikSubmit","dispatch","FormikHOC","_ref","handleSubmit","_objectWithoutProperties","_excluded","React","createElement","Col","md","Card","CardBody","class","Form","Row","Field","name","label","isMultiple","component","DropZoneField","Button","type","className","onClick","Index","item","Photo","Object","assign","isEmpty","VerifyDetails","CardText","aria-hidden","TextInput","Link","withRouter","path","match","pathname","location","activeclass","color","transition","backgroundColor","UserCard","NavLink","activeStyle","to","target","concat","ValidationSchemaForModal","first_name","required","last_name","FormGroup","Label","for","ReactStrapFormGroupInput","Edit","account_name","account_holder_name","bank_name","sort_code","account_number","_useState","useState","_useState2","_slicedToArray","accountForm","setAccountForm","href","Alert","CardTitle","offset","size","id","BankAccount","noHeader","noBanner","selectItem","get","params","update","UpdateImages","BaseIndexPage","onSubmitItem","getItem","_useContext","useContext","AuthContext","user","tokenAuth","updateLocalData","data","token","getToken","userData","values","isNil","_objectSpread","_id","_ref4","_excluded3","display_id","Math","floor","Date","now","avatar_images","map","_ref2","index","fileName","_excluded2","sub_location","substring","lastIndexOf","process","first","_ref3","_data$error","error","Images","entity_type","file_first_name","entity_id","profile_photo_url","profile_photo","then","res","catch","err","useEffect","DashboardMainMenu","Container","VerticalMenu","Switch","Route","exact","onSubmit","active","borderBottom","style","display","DASHBOARD","USER_DETAIL","LANDLORD_SERVICE","PROPERTY_SERVICE","MY_LISTING","alt","src","username","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","children","PropTypes","node","string","closeClassName","closeAriaLabel","cssModule","fade","bool","isOpen","toggle","func","tag","tagPropType","Fade","innerRef","oneOfType","defaultProps","unmountOnExit","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeClasses","alertTransition","baseClass","timeout","_extends","in","role"],"mappings":"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","file":"static/js/23.4a63dc25.chunk.js","sourcesContent":["const initialValues = {\n  avatar: [],\n};\n\nexport default initialValues;\n","import * as Yup from \"yup\";\nconst validationSchema = () => {\n  return Yup.object().shape({\n    \n  });\n};\n\nexport default validationSchema;\n","import { DropZoneField } from \"components/global-components/Components/Form\";\nimport { FormikHOC } from \"components/global-components/Components/ReactStrapFormik\";\nimport { Field } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, CardBody, Col, Form, Row } from \"reactstrap\";\nimport initialValues from \"./InitialValues.json\";\nimport ValidationSchema from \"./ValidationSchema\";\n\nconst Edit = ({ handleSubmit, ...props }) => {\n  return (\n    <Col md=\"9\">\n      <div>\n        <Card>\n          <CardBody>\n            <h2 class=\"sub-title\">\n              Add a new photo below to replace your profile picture:\n            </h2>\n\n            <Form>\n              <Row>\n                <Col md=\"12\">\n                  <Field\n                    name=\"avatar\"\n                    label=\" to add profile photo\"\n                    isMultiple={false}\n                    component={DropZoneField}\n                  />\n                </Col>\n                <Button\n                  type=\"submit\"\n                  className=\" btn-blue btn-secondary ml-3 mt-3\"\n                  onClick={handleSubmit}\n                >\n                  update\n                </Button>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    </Col>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  initialValues: initialValues,\n  validationSchema: ValidationSchema,\n  isFormikSubmit: false,\n});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(mapStateToProps, mapDispatchToProps)(FormikHOC(Edit));\n","import Photo from \"./Components/ProfilePhoto\";\nimport React from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport initialValues from \"./Components/InitialValues.json\";\n\nconst Index = ({ item, ...props }) => {\n  const setInitialValues = () => {\n    if (isEmpty(item)) {\n      return initialValues;\n    } else {\n      return item;\n    }\n  };\n\n  return <Photo initialValues={setInitialValues()} {...props} />;\n};\n\nexport default Index;\n","import { Button, Row, Col, Form } from \"reactstrap\";\nimport { Card, CardText, CardBody } from \"reactstrap\";\n\nimport React from \"react\";\nimport { TextInput } from \"../../../components/global-components/Components/Form\";\nimport { Link } from \"react-router-dom\";\n\nconst VerifyDetails = () => {\n  return (\n    <Col md=\"9\">\n      <div className=\"dashboardContent\">\n        <h1 className=\"mt-2 mb-3\">Verify Details</h1>\n\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardBody>\n                <CardText>\n                  <p>\n                    Below is a list of all the enquiries you have made to\n                    landlords via DirectRent. Here you can keep track of the\n                    enquiries you've made and keep notes.\n                  </p>\n                </CardText>\n                <h2 className=\"sub-title\">Verified Details</h2>\n                <CardText>\n                  <p>\n                    <i className=\"fa fa-check pr-2\" aria-hidden=\"true\"></i>\n                    Your email has been verified as iamsaeedofficial@gmail.com\n                  </p>\n\n                  <p className=\"my-2 text-dark\">Add New Phone Number</p>\n                  <p>\n                    We require a valid phone number to ensure we can get in\n                    touch with both tenants and landlords for viewings.\n                  </p>\n\n                  <b className=\"my-2\">\n                    We will verify your telephone number by sending a code via\n                    text message. If you provide a landline, we will call your\n                    landline number and the code will be read out. You will then\n                    be asked to enter that code on this page.\n                  </b>\n\n                  <Form>\n                    <TextInput\n                      label=\"\n                US Primary Number\"\n                    />\n                    <Link>(Why only US)</Link>\n                  </Form>\n                  \n                  <Button className=\"btn-blue mt-1\">\n                    <i className=\"fa fa-paper-plane mr-2\" aria-hidden=\"true\" />{\" \"}\n                    Send Code\n                  </Button>\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  );\n};\nexport default VerifyDetails;\n","import UserCard from \"components/section-components/UserCard/UserCard\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport { Col } from \"reactstrap\";\nimport { BACK_ACCOUNT, PHOTO, USER_DETAIL, VERIFY } from \"./Constants\";\n\nconst VerticalMenu = ({ match: { path }, ...props }) => {\n  const {\n    location: { pathname },\n  } = props;\n  const activeclass = {\n    color: \"rgb(255, 255, 255)\",\n    transition: \"all 0.5s ease\",\n    backgroundColor: \"#40586d\",\n  };\n  return (\n    <Col md=\"3\">\n      <div className=\"userDetailsMenu userDetailsMenuDesktop\">\n        <ul className=\"vertical-menu__list\">\n          <UserCard />\n          <li class=\" \">\n            <NavLink\n              activeStyle={pathname === USER_DETAIL && activeclass}\n              to={USER_DETAIL}\n              target=\"\"\n            >\n              Edit Details\n            </NavLink>\n          </li>\n          <li class=\"active \">\n            <NavLink\n              activeStyle={activeclass}\n              to={`${path}${VERIFY}`}\n              target=\"\"\n            >\n              Verify Details\n            </NavLink>\n          </li>\n          <li class=\" \">\n            <NavLink activeStyle={activeclass} to={`${path}${PHOTO}`} target=\"\">\n              My Photo\n            </NavLink>\n          </li>\n          <li class=\" \">\n            <NavLink\n              activeStyle={activeclass}\n              to={`${path}${BACK_ACCOUNT}`}\n              target=\"\"\n            >\n              Bank Accounts\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </Col>\n  );\n};\n\nexport default withRouter(VerticalMenu);\n","export const VERIFY = \"/verify\";\nexport const PHOTO = \"/photo\";\nexport const BACK_ACCOUNT = \"/back-accounts\";\nexport const USER_DETAIL = '/user-detail';","import * as Yup from \"yup\";\nconst ValidationSchemaForModal = () => {\n  return Yup.object().shape({\n    first_name: Yup.string().required(\"Required\"),\n    last_name: Yup.string().required(\"Required\"),\n  });\n};\n\nexport default ValidationSchemaForModal;\n","import React from 'react';\nimport { ReactStrapFormGroupInput } from \"components/global-components/Components/Form\";\nimport { FormikHOC } from \"components/global-components/Components/ReactStrapFormik\";\nimport { Field } from \"formik\";\nimport { connect } from \"react-redux\";\n\nimport ValidationSchema from \"./ValidationSchema\";\n\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Row,\n} from \"reactstrap\";\n\nconst Edit = ({ handleSubmit, ...props }) => {\n  return (\n    <Col md=\"9\">\n      <div className=\"dashboardContent\">\n        <h1 className=\"mt-2 mb-3\">Edit your details</h1>\n        <Card>\n          <CardBody>\n            <h2 class=\"sub-title\">Want to amend your details?</h2>\n            <p>\n              As well as the details below, you can{\" \"}\n              <Link className=\"text-primary\" to=\"/user-detail/verify\">\n                amend your phone number here\n              </Link>\n              , and{\" \"}\n              <Link className=\"text-primary\" to=\"/user-detail/photo\">\n                change your user photo here\n              </Link>\n              .\n            </p>\n            <h2 class=\"sub-title\">Account Information</h2>\n\n            <Form>\n              <Row>\n                <FormGroup className=\"ml-3\">\n                  <Label for=\"changepassword\">Password</Label>\n                  <br />\n                  <Button className=\"btn btn-blue\">\n                    Click to change Password\n                  </Button>\n                </FormGroup>\n\n                <Col md=\"12\">\n                  <Field\n                    name=\"first_name\"\n                    label=\"First Name (Public)\"\n                    // value=\"test\"\n                    className=\"ml-3\"\n                    component={ReactStrapFormGroupInput}\n                  />\n                </Col>\n                <Col md=\"12\">\n                  <Field\n                    name=\"last_name\"\n                    label=\"Surname (Private)\"\n                    className=\"ml-3\"\n                    component={ReactStrapFormGroupInput}\n                  />\n                </Col>\n                <Button\n                  type=\"submit\"\n                  className=\"btn-blue ml-3\"\n                  onClick={handleSubmit}\n                >\n                  update\n                </Button>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    </Col>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // initialValues: initialValues,\n  validationSchema: ValidationSchema,\n  isFormikSubmit: false,\n});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(mapStateToProps, mapDispatchToProps)(FormikHOC(Edit));\n","const initialValues = {\n  first_name: \"\",\n  last_name: \"\",\n};\n\nexport default initialValues;\n","import React from \"react\";\nimport Edit from \"./Components/Edit\";\nimport isEmpty from \"lodash/isEmpty\";\nimport initialValues from \"./Components/InitialValues.json\";\n\nconst Index = ({ item, ...props }) => {\n  const setInitialValues = () => {\n    if (isEmpty(item)) {\n      return initialValues;\n    } else {\n      return item;\n    }\n  };\n\n  return <Edit initialValues={setInitialValues()} {...props} />;\n};\n\nexport default Index;\n","const initialValues = {\n  account_name: \"\",\n  account_holder_name: \"\",\n  bank_name: \"\",\n  sort_code: \"\",\n  account_number: \"\",\n};\n\nexport default initialValues;\n","import * as Yup from \"yup\";\nconst validationSchema = () => {\n  return Yup.object().shape({\n    account_name: Yup.string().required(\"Required\"),\n    account_holder_name: Yup.string().required(\"Required\"),\n    bank_name: Yup.string().required(\"Required\"),\n    sort_code: Yup.string().required(\"Required\"),\n    account_number: Yup.string().required(\"Required\"),\n  });\n};\n\n\nexport default validationSchema;\n","import { ReactStrapFormGroupInput } from \"components/global-components/Components/Form\";\nimport { FormikHOC } from \"components/global-components/Components/ReactStrapFormik\";\nimport { Field } from \"formik\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  Col,\n  Form,\n  Row,\n} from \"reactstrap\";\nimport initialValues from \"./InitialValues.json\";\nimport ValidationSchema from \"./ValidationSchema\";\n\nconst BankAccount = ({ handleSubmit, ...props }) => {\n  const [accountForm, setAccountForm] = useState(false);\n\n  return (\n    <Col md=\"9\">\n      <div className=\"dashboardContent\">\n        <h1 className=\"mt-2 mb-3\">Manage Bank Accounts</h1>\n\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardBody>\n                <h2 class=\"sub-title\">Search Alerts</h2>\n                <CardText>\n                  <p>\n                    Here you can manage the bank accounts you have registered\n                    with us and select the primary bank account to be used for\n                    outstanding and future payments.\n                  </p>\n                  <p>\n                    Some of our services, such as rent payments, may not be\n                    available until we have received your payment details.\n                  </p>\n                  <p>\n                    If required we will also pass the bank account information\n                    to the tenants once the tenancy is set-up, and ask them to\n                    pay their rent into this account. Please confirm this with\n                    your tenants, and if you would prefer them to pay by other\n                    means - just let them know directly.\n                  </p>\n                  <p>\n                    <a href=\"/faq#aremydetailssecure\" target=\"_blank\">\n                      Are my bank details secure?\n                    </a>\n                  </p>\n                  <Alert color=\"primary\">\n                    You don't have any bank accounts registered with us at this\n                    moment.\n                  </Alert>\n                </CardText>\n\n                <Button\n                  className=\"btn btn-blue text-center\"\n                  onClick={() => setAccountForm(!accountForm)}\n                >\n                  Add New\n                </Button>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"12\">\n            {accountForm && (\n              <Card className=\"mt-4\">\n                <CardTitle className=\"text-center my-3\">\n                  <b> Add New Bank Account</b>\n                </CardTitle>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md={{ offset: 3, size: 6 }}>\n                        <Field\n                          name=\"account_name\"\n                          label={<b>Account Name</b>}\n                          id=\"acccountName\"\n                          component={ReactStrapFormGroupInput}\n                        >\n                          <p>А custom name for this bank account.</p>\n                        </Field>\n                      </Col>\n                      <Col md={{ offset: 3, size: 6 }}>\n                        <Field\n                          name=\"account_holder_name\"\n                          label={<b>Account Holder Name</b>}\n                          component={ReactStrapFormGroupInput}\n                        />\n                      </Col>\n                      <Col md={{ offset: 3, size: 6 }}>\n                        <Field\n                          name=\"bank_name\"\n                          label={<b>Bank Name</b>}\n                          component={ReactStrapFormGroupInput}\n                        />\n                      </Col>\n                      <Col md={{ offset: 3, size: 6 }}>\n                        <Field\n                          name=\"sort_code\"\n                          label={<b>Sort Code</b>}\n                          component={ReactStrapFormGroupInput}\n                        />\n                      </Col>\n                      <Col md={{ offset: 3, size: 6 }}>\n                        <Field\n                          name=\"account_number\"\n                          label={<b>Account Number</b>}\n                          component={ReactStrapFormGroupInput}\n                        />\n                      </Col>\n                      <Col md={{ offset: 3, size: 6 }}>\n                        <div className=\"text-left\">\n                         \n                          <Button\n                            type=\"submit\"\n                            className=\"btn btn-blue\"\n                            onClick={handleSubmit}\n                          >\n                            Submit\n                          </Button>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  initialValues: initialValues,\n  validationSchema: ValidationSchema,\n  isFormikSubmit: false,\n});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikHOC(BankAccount));\n","import React from \"react\";\nimport BankAccount from \"./Components/BankAccount\";\n\nconst Index = ({ item, ...props }) => {\n  return <BankAccount {...props} />;\n};\n\nexport default Index;\n","import imageCompression from \"browser-image-compression\";\nimport size from 'lodash/size'\nimport isNil from 'lodash/isNil'\n\nconst Compression = async ({ files }) => {\n  const handleCompression = async (files, index) => {\n    var options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n    if (index < size(files)) {\n      if (isNil(files[index].location)) {\n        let name = files[index].name;\n        let imageType = files[index].type;\n        let imagePath = files[index].path;\n        let blobImages = await imageCompression(files[index], options);\n        files[index] = new File([blobImages], name, {\n          lastModified: new Date().getTime(),\n          type: imageType,\n          path: imagePath,\n        });\n      }\n\n      handleCompression(files, index + 1);\n    } else {\n      files = files;\n    }\n  };\n  let data = await handleCompression(files, 0);\n\n  return files;\n};\n\nexport default Compression;\n","import isNil from \"lodash/isNil\";\nimport map from \"lodash/map\";\nimport first from \"lodash/first\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { connect } from \"react-redux\";\nimport { selectItem } from \"state/Auth/Selectors\";\nimport { Container, Row } from \"reactstrap\";\nimport { update } from \"state/Auth/Epic\";\nimport { getToken } from \"lib/helpers/localStorage\";\nimport React, { useContext, useEffect } from \"react\";\nimport { AuthContext } from \"Boot/auth/AuthProvider\";\nimport Photo from \"./Components/EditProfilePhoto/index\";\nimport VerifyDetails from \"./Components/VerifyDetails\";\nimport VerticalMenu from \"./Components/VerticalMenu\";\nimport Edit from \"./Components/EditDetails/index\";\nimport BankAccount from \"./Components/BankAccount/index\";\nimport DashboardMainMenu from \"../../components/DashboardMainMenu\";\nimport BaseIndexPage from \"../../components/HOC/BaseIndexPage\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { updateImages as UpdateImages, get } from \"state/Auth/Epic\";\nimport Compression from \"components/global-components/Components/Images/ImageCompression\";\n\nconst Index = ({\n  match: { path },\n  onSubmitItem,\n  UpdateImages,\n  getItem,\n  ...props\n}) => {\n  const { user, tokenAuth } = useContext(AuthContext);\n\n  const updateLocalData = (data) => {\n    const token = getToken();\n    const item = { userData: data, token: token };\n    tokenAuth(item);\n  };\n\n  const handleSubmit = (values) => {\n    const { avatar } = values;\n\n    let { REACT_APP_S3_BUCKET_URL } = process.env;\n\n    if (!isNil(avatar)) {\n      let display_id = Math.floor(Date.now() / 1000);\n\n      let avatar_images = map(avatar, ({ name, ...rest }, index) => {\n        let fileName = name;\n        let sub_location = `${display_id}_profile_photo_${\n          index + 1\n        }${fileName.substring(fileName.lastIndexOf(\".\"))}`;\n        return {\n          location: `${REACT_APP_S3_BUCKET_URL}/${sub_location}`,\n          sub_location,\n          type: \"profile_photo\",\n          name: name,\n        };\n      });\n\n      values = {\n        ...values,\n        avatar: first(avatar_images),\n      };\n\n      onSubmitItem({ id: user._id, ...values }, ({ data }) => {\n        updateLocalData(data);\n        const { error = \"\" } = data;\n\n        if (isEmpty(error)) {\n          // let profilePhoto = await Compression(profile_photo);\n\n          const Images = {\n            entity_type: \"user\",\n            file_first_name: `${display_id}_`,\n            entity_id: user._id,\n            profile_photo_url: data.avatar,\n            profile_photo: avatar,\n          };\n\n          UpdateImages(user._id, Images)\n            .then((res) => {})\n            .catch((err) => {});\n        }\n      });\n    } else {\n      onSubmitItem({ id: user._id, ...values }, ({ data, ...rest }) => {\n        updateLocalData(data);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getItem(user._id);\n  }, []);\n  return (\n    <div className=\" mg-top-90 \">\n      <DashboardMainMenu />\n      <Container>\n        <Row className=\"py-4\">\n          <VerticalMenu />\n          <Switch>\n            <Route exact path={path}>\n              <Edit onSubmit={handleSubmit} {...props} />\n            </Route>\n            <Route exact path={`${path}/photo`}>\n              <Photo onSubmit={handleSubmit} {...props} />\n            </Route>\n            <Route exact path={`${path}/verify`}>\n              <VerifyDetails {...props} />\n            </Route>\n            <Route exact path={`${path}/back-accounts`}>\n              <BankAccount onSubmit={handleSubmit} {...props} />\n            </Route>\n          </Switch>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    noHeader: true,\n\n    noBanner: true,\n    item: selectItem(state),\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  get: (params) => dispatch(get(params)),\n  update: (id, params) => dispatch(update(id, params)),\n  UpdateImages: (id, params) => dispatch(UpdateImages(id, params)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(BaseIndexPage(Index)));\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  DASHBOARD,\n  USER_DETAIL,\n  LANDLORD_SERVICE,\n  PROPERTY_SERVICE,\n  MY_LISTING,\n} from \"components/Routes/Constants\";\n\nconst DashboardMainMenu = () => {\n  const active = { borderBottom: \" 3px solid white\" };\n  return (\n    <div className=\" dashboard-top-menu\">\n      <ul\n        className=\"container dashboard-top-menu__list text-white py-sm-3 \"\n        style={{ display: \"flow-root\" }}\n      >\n        <li className=\" \">\n          <NavLink activeStyle={active} className=\"py-sm-3 \" to={DASHBOARD}>\n            Dashboard\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink activeStyle={active} className=\"py-sm-3 \" to={USER_DETAIL}>\n            User Details\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            activeStyle={active}\n            className=\"py-sm-3 \"\n            to={LANDLORD_SERVICE}\n          >\n            Landlord Services\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            activeStyle={active}\n            className=\"py-sm-3 \"\n            to={PROPERTY_SERVICE}\n          >\n            Property Services\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink activeStyle={active} className=\"py-sm-3 \" to={MY_LISTING}>\n            My Listing\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            // activeStyle={active}\n            className=\"py-sm-3 \"\n            to=\"#\"\n          >\n            Share &amp; Earn $29+\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default DashboardMainMenu;\n","import React from 'react';\nimport { AuthContext } from \"Boot/auth/AuthProvider\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n\nconst UserCard = () => {\n  const { user } = useContext(AuthContext);\n  const imagealt = \"image\";\n  return (\n    <li className=\"myaccount\">\n      <div className=\"  d-flex align-items-center flex-column\">\n        <NavLink className=\"userPicContainer rounded-circle mx-0\" to=\"#\">\n          <img\n            alt={imagealt}\n            className=\"userAvator rounded-circle\"\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQVe0cFaZ9e5Hm9X-tdWRLSvoZqg2bjemBABA&usqp=CAU\"\n          ></img>\n        </NavLink>\n        <div className=\"text-center\">\n          {!isEmpty(user) && (\n            <p className=\"font-weight-bold\">{user.username}</p>\n          )}\n          <p>\n           \n          </p>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default UserCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;"],"sourceRoot":""}