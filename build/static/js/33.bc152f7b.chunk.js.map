{"version":3,"sources":["Pages/User/SignUp/Components/InitialValues.json.js","Pages/User/SignUp/Components/validationSchema.js","Pages/User/SignUp/Components/FormWrapper.js","Pages/User/SignUp/index.js","components/section-components/UserHeader.js"],"names":["initialValues","email","password","confirm_password","ValidationSchema","Yup","shape","required","matches","when","is","val","length","then","oneOf","connect","state","props","validationSchema","submitButtonLabel","dispatch","FormikHOC","_ref","handleSubmit","handleKeypress","values","_objectWithoutProperties","_excluded","e","charCode","React","createElement","Form","Field","label","type","name","bsSize","onKeyPress","component","ReactStrapFormGroupInput","labelClass","className","href","target","noBanner","isHideFooter","noHeader","isHideNavigation","BaseIndexPage","turnOffSubmitting","turnOnSubmitting","_useContext","useContext","AuthContext","onHandleRegister","isLoggedIn","Route","Redirect","to","concat","PROPERTY","Container","UserHeader","Row","Col","md","Card","CardTitle","CardBody","FormWrapper","Object","assign","onSubmit","Link","onClick","window","location","class","src","alt","id"],"mappings":"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","file":"static/js/33.bc152f7b.chunk.js","sourcesContent":["export const initialValues = {\n  email: \"\",\n  password: \"\",\n  confirm_password: \"\",\n};\n","import * as Yup from \"yup\";\nexport const ValidationSchema = () => {\n  return Yup.object().shape({\n    email: Yup.string().email().required(\"Required\"),\n    password: Yup.string()\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Password must contain at-least 8 characters, one number and a special character (!@#$%)\"\n      )\n      .required(\"Required\"),\n    confirm_password: Yup.string().when(\"password\", {\n      is: (val) => (val && val.length > 0 ? true : false),\n      then: Yup.string()\n        .oneOf([Yup.ref(\"password\")], \"Both password need to be the same\")\n        .required(\"Required\"),\n    }),\n  });\n};\n","import React from 'react';\nimport { ReactStrapFormGroupInput } from \"components/global-components/Components/Form\";\nimport { FormikHOC } from \"components/global-components/Components/ReactStrapFormik\";\nimport { connect } from \"react-redux\";\nimport { initialValues } from \"./InitialValues.json\";\nimport { Field } from \"formik\";\nimport { Form } from \"reactstrap\";\nimport { ValidationSchema } from \"./validationSchema\";\n\nconst FormWrapper = ({ handleSubmit, values, ...rest }) => {\n  const handleKeypress = (e) => {\n    if (e.charCode === 13) {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <Form>\n      <Field\n        label={<b>Email</b>}\n        type=\"text\"\n        name=\"email\"\n        bsSize=\"sm\"\n        onKeyPress={handleKeypress}\n        component={ReactStrapFormGroupInput}\n      />\n\n      <Field\n        label={<b>Password</b>}\n        type=\"password\"\n        name=\"password\"\n        bsSize=\"sm\"\n        onKeyPress={handleKeypress}\n        component={ReactStrapFormGroupInput}\n      />\n      <Field\n        label={<b>Confirm password</b>}\n        type=\"password\"\n        name=\"confirm_password\"\n        bsSize=\"sm\"\n        labelClass=\"mt-3\"\n        onKeyPress={handleKeypress}\n        component={ReactStrapFormGroupInput}\n      />\n\n      <p>\n        By clicking below and registering with DirectRent I agree to the\n        DirectRent{\" \"}\n        <a className=\"text-primary\" href=\"/#\" target=\"_blank\">\n          Terms and Conditions\n        </a>{\" \"}\n        and{\" \"}\n        <a className=\"text-primary\" href=\"/#\" target=\"_blank\">\n          Privacy Policy\n        </a>\n      </p>\n    </Form>\n  );\n};\nconst mapStateToProps = (state, props) => ({\n  initialValues: initialValues,\n  validationSchema: ValidationSchema,\n  submitButtonLabel: \"Sign Up\",\n});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikHOC(FormWrapper));\n","import { AuthContext } from \"Boot/auth/AuthProvider\";\nimport BaseIndexPage from \"components/HOC/BaseIndexPage\";\nimport { PROPERTY } from \"components/Routes/Constants\";\nimport UserHeader from \"components/section-components/UserHeader\";\nimport React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, Route } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, Col, Container, Row } from \"reactstrap\";\nimport FormWrapper from \"./Components/FormWrapper\";\n\nconst Index = ({ turnOffSubmitting, turnOnSubmitting, ...props }) => {\n  const { onHandleRegister, isLoggedIn } = useContext(AuthContext);\n  if (isLoggedIn)\n    return (\n      <Route>\n        <Redirect to={`${PROPERTY}/create#step1`} />\n      </Route>\n    );\n  return (\n    <div className=\"signin\">\n      <Container>\n        <UserHeader />\n        <Row className=\"d-flex justify-content-center my-4\">\n          <Col md=\"5\">\n            <h1 className=\"my-3 text-center \">Create a New Account</h1>\n            <Card className=\"border-0 card-shadow-info\">\n              <CardTitle>\n                <h2 className=\"sub-title mt-3 pl-4\"> Account Information</h2>\n              </CardTitle>\n              <CardBody>\n                <FormWrapper\n                  {...props}\n                  onSubmit={(values) =>\n                    onHandleRegister(\n                      values,\n                      turnOffSubmitting,\n                      turnOnSubmitting\n                    )\n                  }\n                />\n              </CardBody>\n            </Card>\n            <p className=\"mt-2\">\n              Already Have an Account!{\" \"}\n              <Link\n                className=\"text-primary \"\n                onClick={() => (window.location.href = \"/login\")}\n              >\n                Sign In\n              </Link>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nconst mapStateToProps = (state, props) => ({\n  noBanner: true,\n  isHideFooter: true,\n  noHeader: true,\n  isHideNavigation: true,\n});\nexport default connect(mapStateToProps, null)(BaseIndexPage(Index));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserHeader = ({ className }) => (\n  <div className={`d-flex justify-content-center  ${className}`}>\n    <Link to=\"/\">\n      <img\n        class=\"frontlogo\"\n        src=\"/assets/img/footer-logo.png\"\n        alt=\"logo\"\n        id=\"logo\"\n      />\n    </Link>\n  </div>\n);\n\nexport default UserHeader;\n"],"sourceRoot":""}