{"version":3,"sources":["Pages/LandlordMessaging/Components/MessaginModal/Components/Messaging-Modal.js","Pages/LandlordMessaging/Components/MessaginModal/Components/InitialValuesForModal.json.js","Pages/LandlordMessaging/Components/MessaginModal/Components/ValidationSchemaForModal.js","Pages/LandlordMessaging/Components/MessageLandlord.js","Pages/LandlordMessaging/index.js"],"names":["Mhead","styled","h2","_templateObject","_taggedTemplateLiteral","MessagingModalFooterstyle","p","_templateObject2","Link","a","_templateObject3","LinkParagraph","_templateObject4","MessagingModalHeader","React","createElement","className","MessagingModalBody","_ref","onRequestVerification","Row","Col","md","Form","Field","label","name","component","ReactStrapFormGroupInput","href","id","placeholder","Button","onClick","type","color","MessagingModalFooter","initialValuesForModal","first_name","last_name","usa_phone_number","verification_code","ValidationSchemaForModal","Yup","shape","required","sizeofmodal","minWidth","connect","state","props","initialValues","isFormikSubmit","validationSchema","dispatch","FormikHOC","withRouter","_useState","useState","_useState2","_slicedToArray","isModalVisible","setisModalVisible","toggleModal","Container","Card","CardBody","CardText","Modal","toggle","header","footer","style","history","push","noHeader","noBanner","BaseIndexPage","MessageLandlord"],"mappings":"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","file":"static/js/35.0393cd26.chunk.js","sourcesContent":["import { Field } from \"formik\";\nimport React from \"react\";\nimport { Button, Col, Form, Row } from \"reactstrap\";\nimport styled from \"styled-components\";\nimport { ReactStrapFormGroupInput } from \"../../../../../components/global-components/Components/Form\";\n\nconst Mhead = styled.h2``;\nconst MessagingModalFooterstyle = styled.p`\n  font-weight: \"700\";\n  text-decoration: underline;\n  color: blue;\n`;\nconst Link = styled.a`\n  font-weight: \"700\";\n  text-decoration: underline;\n  color: blue;\n`;\nconst LinkParagraph = styled.p`\n  font-weight: \"700\";\n  text-decoration: underline;\n  color: blue;\n`;\nconst MessagingModalHeader = () => {\n  return <Mhead className=\"sub-title\">Verification Required</Mhead>;\n};\nconst MessagingModalBody = ({ onRequestVerification }) => {\n  return (\n    <Row>\n      <Col md={12}>\n        <p>\n          Our most functionality is pen to most user in order to be able to list\n          new properties, or rent a prroperty you have found , you will need to\n          ensure your phone number is authenticated below.\n        </p>\n        <p>\n          If you provide a mobile number , you will receive viewing requests\n          from 8am to 10pm via SMS.\n        </p>\n\n        <span className=\"verifcode\">Step 1: Request Verification Code</span>\n        <Form>\n          {\" \"}\n          <Row>\n            <Col md={6}>\n              <Field\n                label=\"First Name(Public)\"\n                name=\"first_name\"\n                component={ReactStrapFormGroupInput}\n              />\n              {/* <TextInput label=\"First Name(Public) \" /> */}\n            </Col>\n            <Col md={6}>\n              <Field\n                label=\"Last Name(Private) \"\n                name=\"last_name\"\n                component={ReactStrapFormGroupInput}\n              />\n              {/* <TextInput label=\"Last Name(Private) \" /> */}\n            </Col>\n            <Col md={6}>\n              <Field\n                label=\"USA Phone Number \"\n                name=\"usa_phone_number\"\n                component={ReactStrapFormGroupInput}\n              />\n              {/* <TextInput label=\"USA Phone Number \" /> */}\n            </Col>\n            <Col md={6}>\n              <Link href=\"#\">Why only USA numbers?</Link>\n              <LinkParagraph>\n                {\" \"}\n                We take only american number because this site is USA based.\n              </LinkParagraph>{\" \"}\n            </Col>\n            <Col md={12}>\n              <span className=\"verifcode\">Step 2: Submit Verificatio Code</span>\n\n              <Field\n                name=\"verification_code\"\n                id=\"verification_code\"\n                placeholder=\"Verification Code\"\n                component={ReactStrapFormGroupInput}\n              />\n\n              <Button\n                onClick={onRequestVerification}\n                type=\"submit\"\n                color=\"success\"\n                className=\" btn-sm  mt-3\"\n              >\n                <i className=\"fas fa-check pr-2\"></i>\n                Request Verification Code\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\nconst MessagingModalFooter = () => {\n  return (\n    <MessagingModalFooterstyle className=\"mt-2 \">\n      BY REGISTERING WITH DIRECTRENT YOU AGREE TO THE DIRECTRENT TERMS AND\n      CONDITIONS AND PRIVACY POLICY.\n    </MessagingModalFooterstyle>\n  );\n};\nexport { MessagingModalBody, MessagingModalHeader, MessagingModalFooter };\n","const initialValuesForModal = {\n  first_name: \"\",\n  last_name: \"\",\n  usa_phone_number: \"\",\n  verification_code: \"\",\n};\n\nexport default initialValuesForModal;\n","import * as Yup from \"yup\";\nconst ValidationSchemaForModal = () => {\n  return Yup.object().shape({\n    first_name: Yup.string().required(\"Required\"),\n    last_name: Yup.string().required(\"Required\"),\n    usa_phone_number: Yup.string().required(\"Required\"),\n    verification_code: Yup.string().required(\"Required\"),\n  });\n};\n\nexport default ValidationSchemaForModal;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Card, CardBody, CardText, Container } from \"reactstrap\";\nimport Modal from \"../../../components/global-components/Components/Modal\";\nimport {\n  MessagingModalBody,\n  MessagingModalFooter,\n  MessagingModalHeader,\n} from \"./MessaginModal/index\";\n\nimport { FormikHOC } from \"../../../components/global-components/Components/ReactStrapFormik\";\nimport initialValuesForModal from \"../Components/MessaginModal/Components/InitialValuesForModal.json\";\nimport ValidationSchemaForModal from \"../Components/MessaginModal/Components/ValidationSchemaForModal\";\n\nlet sizeofmodal = {\n  minWidth: \"45%\",\n};\n\nconst MessageLandlord = (props) => {\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  const toggleModal = () => {\n    setisModalVisible(!isModalVisible);\n  };\n\n  return (\n    <div className=\" mg-top-90 \">\n      <div className=\"messagelandlord pt-5 border-top\">\n        <Container className=\"pb-3\">\n          <h1>Message Landlord / Request Viewing</h1>\n          <p>\n            Property Description:{\" \"}\n            <em>\n              <Link\n                className=\"text-primary\"\n                href=\"/property-to-rent/london/room-in-a-shared-flat-london-e16/920268\"\n              >\n                Room in a Shared Flat, Washington, E16\n              </Link>\n            </em>\n          </p>\n          <p>\n            Landlord Name: <strong> Simon B. </strong>\n          </p>\n          <Card className=\"my-3mb-3\">\n            <CardBody>\n              <CardText>\n                <p>\n                  <Link\n                    onClick={toggleModal}\n                    className=\"btn btn-success\"\n                    href=\"#\"\n                  >\n                    Verify Number & Request Viewing Now\n                  </Link>\n                </p>\n\n                <div className=\"alert alert-success\">\n                  <p>\n                    <b>What are the benefits of verifying my account?</b>\n                  </p>\n                  <ul>\n                    <li>\n                      It will show the landlord you are serious about renting\n                      this property\n                    </li>\n                    <li>We can show you the landlord's availability</li>\n                    <li>\n                      We will immediately notify the landlord via SMS of your\n                      request\n                    </li>\n                    <li>\n                      Viewing requests have a much higher response rate, and\n                      speed of response\n                    </li>\n                    <li>\n                      We can show the landlord we've verified your number and\n                      details\n                    </li>\n                    <li>\n                      The landlord will require you to do this if you do want to\n                      book a viewing later\n                    </li>\n                  </ul>\n                </div>\n\n                <p>\n                  <Button color=\"link\" onClick=\"showAskForm()\">\n                    Click here\n                  </Button>{\" \"}\n                  to send a message without requesting a viewing.\n                </p>\n              </CardText>\n            </CardBody>\n          </Card>\n        </Container>\n        <Modal\n          isModalVisible={isModalVisible}\n          toggle={() => toggleModal()}\n          header={<MessagingModalHeader />}\n          footer={<MessagingModalFooter />}\n          style={sizeofmodal}\n        >\n          <MessagingModalBody\n            onRequestVerification={() => {\n              toggleModal();\n              props.history.push(\"/requestviewing\");\n            }}\n          />\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  initialValues: initialValuesForModal,\n  isFormikSubmit: false,\n  validationSchema: ValidationSchemaForModal,\n});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikHOC(withRouter(MessageLandlord)));\n","import React from \"react\";\nimport MessageLandlord from \"./Components/MessageLandlord\";\nimport { connect } from \"react-redux\";\n\nimport BaseIndexPage from \"../../components/HOC/BaseIndexPage\";\n\nconst Index = () => {\n  return (\n    <div>\n      <MessageLandlord />\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    noHeader: true,\n\n    noBanner: true,\n  };\n};\n\nexport default connect(mapStateToProps)(BaseIndexPage(Index));\n"],"sourceRoot":""}