{"version":3,"sources":["../node_modules/.pnpm/react-vertical-timeline-component@3.6.0_react@16.14.0/node_modules/react-vertical-timeline-component/dist-es6/VerticalTimeline.js","../node_modules/.pnpm/react-vertical-timeline-component@3.6.0_react@16.14.0/node_modules/react-vertical-timeline-component/dist-es6/VerticalTimelineElement.js","../../src/observe.ts","../../src/InView.tsx","../../src/useInView.tsx","../node_modules/.pnpm/react-vertical-timeline-component@3.6.0_react@16.14.0/node_modules/react-vertical-timeline-component/dist-es6/index.js"],"names":["exports","__esModule","default","_react","_interopRequireDefault","require","_propTypes","_classnames","obj","VerticalTimeline","_ref","_ref$animate","animate","_ref$className","className","_ref$layout","layout","_ref$lineColor","lineColor","children","window","document","documentElement","style","setProperty","createElement","propTypes","oneOfType","arrayOf","node","isRequired","string","bool","oneOf","_default","_reactIntersectionObserver","VerticalTimelineElement","_ref$children","_ref$contentArrowStyl","contentArrowStyle","_ref$contentStyle","contentStyle","_ref$date","date","_ref$dateClassName","dateClassName","_ref$icon","icon","_ref$iconClassName","iconClassName","_ref$iconOnClick","iconOnClick","_ref$onTimelineElemen","onTimelineElementClick","_ref$iconStyle","iconStyle","_ref$id","id","_ref$position","position","_ref$style","_ref$textClassName","textClassName","_ref$intersectionObse","intersectionObserverProps","rootMargin","triggerOnce","_ref$visible","visible","InView","_ref2","inView","ref","Fragment","onClick","shape","element","func","root","object","threshold","number","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","defaultFallbackInView","optionsToId","options","Object","keys","sort","filter","key","map","has","set","toString","get","observe","callback","fallbackInView","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","createObserver","instance","thresholds","elements","observer","entries","forEach","entry","some","trackVisibility","isVisible","Array","isArray","callbacks","push","splice","indexOf","length","unobserve","size","disconnect","isPlainChildren","props","_unobserveCb","handleNode","skip","setState","initialInView","observeNode","handleChange","onChange","state","componentDidUpdate","prevProps","this","delay","componentWillUnmount","render","as","React","useInView","setRef","current","useEffect","result","displayName","defaultProps","module"],"mappings":"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","file":"static/js/2.393a8a73.chunk.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst VerticalTimeline = ({\n  animate = true,\n  className = '',\n  layout = '2-columns',\n  lineColor = '#FFF',\n  children\n}) => {\n  if (typeof window === 'object') {\n    document.documentElement.style.setProperty('--line-color', lineColor);\n  }\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)(className, 'vertical-timeline', {\n      'vertical-timeline--animate': animate,\n      'vertical-timeline--two-columns': layout === '2-columns',\n      'vertical-timeline--one-column-left': layout === '1-column' || layout === '1-column-left',\n      'vertical-timeline--one-column-right': layout === '1-column-right'\n    })\n  }, children);\n};\n\nVerticalTimeline.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired,\n  className: _propTypes.default.string,\n  animate: _propTypes.default.bool,\n  layout: _propTypes.default.oneOf(['1-column-left', '1-column', '2-columns', '1-column-right']),\n  lineColor: _propTypes.default.string\n};\nvar _default = VerticalTimeline;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactIntersectionObserver = require(\"react-intersection-observer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst VerticalTimelineElement = ({\n  children = '',\n  className = '',\n  contentArrowStyle = null,\n  contentStyle = null,\n  date = '',\n  dateClassName = '',\n  icon = null,\n  iconClassName = '',\n  iconOnClick = null,\n  onTimelineElementClick = null,\n  iconStyle = null,\n  id = '',\n  position = '',\n  style = null,\n  textClassName = '',\n  intersectionObserverProps = {\n    rootMargin: '0px 0px -40px 0px',\n    triggerOnce: true\n  },\n  visible = false\n}) => /*#__PURE__*/_react.default.createElement(_reactIntersectionObserver.InView, intersectionObserverProps, ({\n  inView,\n  ref\n}) => /*#__PURE__*/_react.default.createElement(\"div\", {\n  ref: ref,\n  id: id,\n  className: (0, _classnames.default)(className, 'vertical-timeline-element', {\n    'vertical-timeline-element--left': position === 'left',\n    'vertical-timeline-element--right': position === 'right',\n    'vertical-timeline-element--no-children': children === ''\n  }),\n  style: style\n}, /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"span\", {\n  // eslint-disable-line jsx-a11y/no-static-element-interactions\n  style: iconStyle,\n  onClick: iconOnClick,\n  className: (0, _classnames.default)(iconClassName, 'vertical-timeline-element-icon', {\n    'bounce-in': inView || visible,\n    'is-hidden': !(inView || visible)\n  })\n}, icon), /*#__PURE__*/_react.default.createElement(\"div\", {\n  style: contentStyle,\n  onClick: onTimelineElementClick,\n  className: (0, _classnames.default)(textClassName, 'vertical-timeline-element-content', {\n    'bounce-in': inView || visible,\n    'is-hidden': !(inView || visible)\n  })\n}, /*#__PURE__*/_react.default.createElement(\"div\", {\n  style: contentArrowStyle,\n  className: \"vertical-timeline-element-content-arrow\"\n}), children, /*#__PURE__*/_react.default.createElement(\"span\", {\n  className: (0, _classnames.default)(dateClassName, 'vertical-timeline-element-date')\n}, date)))));\n\nVerticalTimelineElement.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),\n  className: _propTypes.default.string,\n  contentArrowStyle: _propTypes.default.shape({}),\n  contentStyle: _propTypes.default.shape({}),\n  date: _propTypes.default.node,\n  dateClassName: _propTypes.default.string,\n  icon: _propTypes.default.element,\n  iconClassName: _propTypes.default.string,\n  iconStyle: _propTypes.default.shape({}),\n  iconOnClick: _propTypes.default.func,\n  onTimelineElementClick: _propTypes.default.func,\n  id: _propTypes.default.string,\n  position: _propTypes.default.string,\n  style: _propTypes.default.shape({}),\n  textClassName: _propTypes.default.string,\n  visible: _propTypes.default.bool,\n  intersectionObserverProps: _propTypes.default.shape({\n    root: _propTypes.default.object,\n    rootMargin: _propTypes.default.string,\n    threshold: _propTypes.default.number,\n    triggerOnce: _propTypes.default.bool\n  })\n};\nvar _default = VerticalTimelineElement;\nexports.default = _default;","import { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport { InViewHookResponse, IntersectionOptions } from './index';\nimport { useEffect } from 'react';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n  const setRef = React.useCallback(\n    (node: Element | null) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n          fallbackInView,\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","\"use strict\";\n\n// this should be the entry point to your library\nmodule.exports = {\n  VerticalTimeline: require('./VerticalTimeline').default,\n  // eslint-disable-line global-require\n  VerticalTimelineElement: require('./VerticalTimelineElement').default // eslint-disable-line global-require\n\n};"],"sourceRoot":""}