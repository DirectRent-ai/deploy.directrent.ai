{"version":3,"sources":["Pages/User/ForgotPassword/Components/InitialValues.json.js","Pages/User/ForgotPassword/Components/validationSchema.js","Pages/User/ForgotPassword/Components/FormWrapper.js","Pages/User/ForgotPassword/index.js","components/section-components/UserHeader.js"],"names":["initialValues","email","ValidationSchema","Yup","shape","required","connect","state","props","validationSchema","submitButtonLabel","dispatch","FormikHOC","_ref","handleSubmit","values","_objectWithoutProperties","_excluded","React","createElement","Form","Field","label","type","name","bsSize","onKeyPress","e","charCode","component","ReactStrapFormGroupInput","noBanner","isHideFooter","noHeader","isHideNavigation","BaseIndexPage","turnOffSubmitting","turnOnSubmitting","_useContext","useContext","AuthContext","forgetPass","isLoggedIn","Route","Redirect","to","concat","PROPERTY","className","Container","UserHeader","Row","Col","md","Card","CardTitle","class","CardBody","FormWrapper","Object","assign","onSubmit","Link","onClick","window","location","href","src","alt","id"],"mappings":"6RAAaA,EAAgB,CAC3BC,MAAO,I,SCAIC,EAAmB,WAC9B,OAAOC,MAAaC,MAAM,CACxBH,MAAOE,MAAaF,QAAQI,SAAS,e,4BC+B1BC,qBANS,SAACC,EAAOC,GAAK,MAAM,CACzCR,cAAeA,EACfS,iBAAkBP,EAClBQ,kBAAmB,uBAEM,SAACC,GAAQ,MAAM,KAC3BL,CAGbM,aA5BkB,SAAHC,GAA2C,IAArCC,EAAYD,EAAZC,aAAoBD,EAANE,OAAeC,YAAAH,EAAAI,GAMlD,OACEC,IAAAC,cAACC,IAAI,KACHF,IAAAC,cAACE,IAAK,CACJC,MAAOJ,IAAAC,cAAA,SAAG,iBACVI,KAAK,OACLC,KAAK,QACLC,OAAO,KACPC,WAZiB,SAACC,GACH,KAAfA,EAAEC,UACJd,KAWEe,UAAWC,W,kDCwCJxB,6BAPS,SAACC,EAAOC,GAAK,MAAM,CACzCuB,UAAU,EACVC,cAAc,EACdC,UAAU,EACVC,kBAAkB,KAGoB,KAAzB5B,CAA+B6B,aArDhC,SAAHtB,GAA2D,IAArDuB,EAAiBvB,EAAjBuB,kBAAmBC,EAAgBxB,EAAhBwB,iBAAqB7B,EAAKQ,YAAAH,EAAAI,GAC5DqB,EAAmCC,qBAAWC,KAAtCC,EAAUH,EAAVG,WAER,OAF8BH,EAAVI,WAIhBxB,IAAAC,cAACwB,IAAK,KACJzB,IAAAC,cAACyB,IAAQ,CAACC,GAAE,GAAAC,OAAKC,IAAQ,oBAI7B7B,IAAAC,cAAA,OAAK6B,UAAU,UACb9B,IAAAC,cAAC8B,IAAS,KACR/B,IAAAC,cAAC+B,IAAU,CAACF,UAAU,SACtB9B,IAAAC,cAACgC,IAAG,CAACH,UAAU,sCACb9B,IAAAC,cAACiC,IAAG,CAACC,GAAG,KACNnC,IAAAC,cAACmC,IAAI,CAACN,UAAU,6BACd9B,IAAAC,cAACoC,IAAS,KACRrC,IAAAC,cAAA,MAAI6B,UAAU,4BAA2B,oBACzC9B,IAAAC,cAAA,KAAGqC,MAAM,yBAAwB,yCAInCtC,IAAAC,cAACsC,IAAQ,CAACT,UAAU,QAClB9B,IAAAC,cAACuC,EAAWC,OAAAC,OAAA,GACNpD,EAAK,CACTqD,SAAU,SAAC9C,GACT0B,EAAW1B,EAAQqB,EAAmBC,OAG1CnB,IAAAC,cAAA,KAAG6B,UAAU,QAAO,UACV,IACR9B,IAAAC,cAAC2C,IAAI,CACHd,UAAU,gBACVe,QAAS,kBAAOC,OAAOC,SAASC,KAAO,WACxC,uB,iCC5CnB,4BAgBehB,IAbI,SAAHrC,GAAA,IAAMmC,EAASnC,EAATmC,UAAS,OAC7B9B,IAAAC,cAAA,OAAK6B,UAAS,kCAAAF,OAAoCE,IAChD9B,IAAAC,cAAC2C,IAAI,CAACjB,GAAG,KACP3B,IAAAC,cAAA,OACEqC,MAAM,YACNW,IAAI,8BACJC,IAAI,OACJC,GAAG","file":"static/js/31.010dc69e.chunk.js","sourcesContent":["export const initialValues = {\n  email: \"\",\n};\n","import * as Yup from \"yup\";\nexport const ValidationSchema = () => {\n  return Yup.object().shape({\n    email: Yup.string().email().required(\"Required\"),\n  });\n};\n","import { ReactStrapFormGroupInput } from \"components/global-components/Components/Form\";\nimport { FormikHOC } from \"components/global-components/Components/ReactStrapFormik\";\nimport { Field } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"reactstrap\";\nimport { initialValues } from \"./InitialValues.json\";\nimport { ValidationSchema } from \"./validationSchema\";\n\nconst FormWrapper = ({ handleSubmit, values, ...rest }) => {\n  const handleKeypress = (e) => {\n    if (e.charCode === 13) {\n      handleSubmit();\n    }\n  };\n  return (\n    <Form>\n      <Field\n        label={<b>Email Address</b>}\n        type=\"text\"\n        name=\"email\"\n        bsSize=\"sm\"\n        onKeyPress={handleKeypress}\n        component={ReactStrapFormGroupInput}\n      />\n    </Form>\n  );\n};\nconst mapStateToProps = (state, props) => ({\n  initialValues: initialValues,\n  validationSchema: ValidationSchema,\n  submitButtonLabel: \"Forget Password \",\n});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikHOC(FormWrapper));\n","import { AuthContext } from \"Boot/auth/AuthProvider\";\nimport BaseIndexPage from \"components/HOC/BaseIndexPage\";\nimport React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport UserHeader from \"components/section-components/UserHeader\";\nimport { Link, Redirect, Route } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, Col, Container, Row } from \"reactstrap\";\nimport FormWrapper from \"./Components/FormWrapper\";\nimport { PROPERTY } from \"components/Routes/Constants\";\n\nconst Index = ({ turnOffSubmitting, turnOnSubmitting, ...props }) => {\n  const { forgetPass, isLoggedIn } = useContext(AuthContext);\n\n  if (isLoggedIn)\n    return (\n      <Route>\n        <Redirect to={`${PROPERTY}/create#step1`} />\n      </Route>\n    );\n  return (\n    <div className=\"signin\">\n      <Container>\n        <UserHeader className=\"py-4\" />\n        <Row className=\"d-flex justify-content-center my-4\">\n          <Col md=\"5\">\n            <Card className=\"border-0 card-shadow-info\">\n              <CardTitle>\n                <h2 className=\"sub-title mt-3 pl-4 mb-0\"> Forgot Password</h2>\n                <p class=\"pl-4 small text-muted\">\n                  Enter email to get your new password\n                </p>\n              </CardTitle>\n              <CardBody className=\"pt-0\">\n                <FormWrapper\n                  {...props}\n                  onSubmit={(values) => {\n                    forgetPass(values, turnOffSubmitting, turnOnSubmitting);\n                  }}\n                />\n                <p className=\"mt-2\">\n                  Back to{\" \"}\n                  <Link\n                    className=\"text-primary \"\n                    onClick={() => (window.location.href = \"/login\")}\n                  >\n                    Sign In\n                  </Link>\n                </p>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nconst mapStateToProps = (state, props) => ({\n  noBanner: true,\n  isHideFooter: true,\n  noHeader: true,\n  isHideNavigation: true,\n});\n\nexport default connect(mapStateToProps, null)(BaseIndexPage(Index));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserHeader = ({ className }) => (\n  <div className={`d-flex justify-content-center  ${className}`}>\n    <Link to=\"/\">\n      <img\n        class=\"frontlogo\"\n        src=\"/assets/img/footer-logo.png\"\n        alt=\"logo\"\n        id=\"logo\"\n      />\n    </Link>\n  </div>\n);\n\nexport default UserHeader;\n"],"sourceRoot":""}